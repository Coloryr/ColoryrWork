#region 程序集 Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// C:\Users\40206\.nuget\packages\newtonsoft.json\12.0.3\lib\netstandard2.0\Newtonsoft.Json.dll
#endregion

using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Dynamic;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;

namespace Newtonsoft.Json.Linq
{
    //
    // 摘要:
    //     Represents an abstract JSON token.
    [DefaultMember("Item")]
    [NullableAttribute(0)]
    [NullableContextAttribute(1)]
    public abstract class JToken : IJEnumerable<JToken>, IEnumerable<JToken>, IEnumerable, IJsonLineInfo, ICloneable, IDynamicMetaObjectProvider
    {
        //
        // 摘要:
        //     Gets the Newtonsoft.Json.Linq.JToken with the specified key.
        //
        // 值:
        //     The Newtonsoft.Json.Linq.JToken with the specified key.
        [NullableAttribute(2)]
        public virtual JToken? this[object key] { get; set; }

        //
        // 摘要:
        //     Gets a comparer that can compare two tokens for value equality.
        //
        // 值:
        //     A Newtonsoft.Json.Linq.JTokenEqualityComparer that can compare two nodes for
        //     value equality.
        public static JTokenEqualityComparer EqualityComparer { get; }
        //
        // 摘要:
        //     Get the last child token of this token.
        //
        // 值:
        //     A Newtonsoft.Json.Linq.JToken containing the last child token of the Newtonsoft.Json.Linq.JToken.
        [NullableAttribute(2)]
        public virtual JToken? Last { get; }
        //
        // 摘要:
        //     Gets or sets the parent.
        //
        // 值:
        //     The parent.
        [NullableAttribute(2)]
        public JContainer? Parent { get; }
        //
        // 摘要:
        //     Gets the node type for this Newtonsoft.Json.Linq.JToken.
        //
        // 值:
        //     The type.
        public abstract JTokenType Type { get; }
        //
        // 摘要:
        //     Gets a value indicating whether this token has child tokens.
        //
        // 值:
        //     true if this token has child values; otherwise, false.
        public abstract bool HasValues { get; }
        //
        // 摘要:
        //     Gets the next sibling token of this node.
        //
        // 值:
        //     The Newtonsoft.Json.Linq.JToken that contains the next sibling token.
        [NullableAttribute(2)]
        public JToken? Next { get; }
        //
        // 摘要:
        //     Gets the previous sibling token of this node.
        //
        // 值:
        //     The Newtonsoft.Json.Linq.JToken that contains the previous sibling token.
        [NullableAttribute(2)]
        public JToken? Previous { get; }
        //
        // 摘要:
        //     Gets the path of the JSON token.
        public string Path { get; }
        //
        // 摘要:
        //     Gets the root Newtonsoft.Json.Linq.JToken of this Newtonsoft.Json.Linq.JToken.
        //
        // 值:
        //     The root Newtonsoft.Json.Linq.JToken of this Newtonsoft.Json.Linq.JToken.
        public JToken Root { get; }
        //
        // 摘要:
        //     Get the first child token of this token.
        //
        // 值:
        //     A Newtonsoft.Json.Linq.JToken containing the first child token of the Newtonsoft.Json.Linq.JToken.
        [NullableAttribute(2)]
        public virtual JToken? First { get; }

        //
        // 摘要:
        //     Compares the values of two tokens, including the values of all descendant tokens.
        //
        // 参数:
        //   t1:
        //     The first Newtonsoft.Json.Linq.JToken to compare.
        //
        //   t2:
        //     The second Newtonsoft.Json.Linq.JToken to compare.
        //
        // 返回结果:
        //     true if the tokens are equal; otherwise false.
        [NullableContextAttribute(2)]
        public static bool DeepEquals(JToken? t1, JToken? t2);
        //
        // 摘要:
        //     Creates a Newtonsoft.Json.Linq.JToken from an object.
        //
        // 参数:
        //   o:
        //     The object that will be used to create Newtonsoft.Json.Linq.JToken.
        //
        // 返回结果:
        //     A Newtonsoft.Json.Linq.JToken with the value of the specified object.
        public static JToken FromObject(object o);
        //
        // 摘要:
        //     Creates a Newtonsoft.Json.Linq.JToken from an object using the specified Newtonsoft.Json.JsonSerializer.
        //
        // 参数:
        //   o:
        //     The object that will be used to create Newtonsoft.Json.Linq.JToken.
        //
        //   jsonSerializer:
        //     The Newtonsoft.Json.JsonSerializer that will be used when reading the object.
        //
        // 返回结果:
        //     A Newtonsoft.Json.Linq.JToken with the value of the specified object.
        public static JToken FromObject(object o, JsonSerializer jsonSerializer);
        //
        // 摘要:
        //     Creates a Newtonsoft.Json.Linq.JToken from a Newtonsoft.Json.JsonReader.
        //
        // 参数:
        //   reader:
        //     A Newtonsoft.Json.JsonReader positioned at the token to read into this Newtonsoft.Json.Linq.JToken.
        //
        //   settings:
        //     The Newtonsoft.Json.Linq.JsonLoadSettings used to load the JSON. If this is null,
        //     default load settings will be used.
        //
        // 返回结果:
        //     A Newtonsoft.Json.Linq.JToken that contains the token and its descendant tokens
        //     that were read from the reader. The runtime type of the token is determined by
        //     the token type of the first token encountered in the reader.
        public static JToken Load(JsonReader reader, [NullableAttribute(2)] JsonLoadSettings? settings);
        //
        // 摘要:
        //     Creates a Newtonsoft.Json.Linq.JToken from a Newtonsoft.Json.JsonReader.
        //
        // 参数:
        //   reader:
        //     A Newtonsoft.Json.JsonReader positioned at the token to read into this Newtonsoft.Json.Linq.JToken.
        //
        // 返回结果:
        //     A Newtonsoft.Json.Linq.JToken that contains the token and its descendant tokens
        //     that were read from the reader. The runtime type of the token is determined by
        //     the token type of the first token encountered in the reader.
        public static JToken Load(JsonReader reader);
        //
        // 摘要:
        //     Asynchronously creates a Newtonsoft.Json.Linq.JToken from a Newtonsoft.Json.JsonReader.
        //
        // 参数:
        //   reader:
        //     A Newtonsoft.Json.JsonReader positioned at the token to read into this Newtonsoft.Json.Linq.JToken.
        //
        //   settings:
        //     The Newtonsoft.Json.Linq.JsonLoadSettings used to load the JSON. If this is null,
        //     default load settings will be used.
        //
        //   cancellationToken:
        //     The token to monitor for cancellation requests. The default value is System.Threading.CancellationToken.None.
        //
        // 返回结果:
        //     A System.Threading.Tasks.Task`1 that represents the asynchronous creation. The
        //     System.Threading.Tasks.Task`1.Result property returns a Newtonsoft.Json.Linq.JToken
        //     that contains the token and its descendant tokens that were read from the reader.
        //     The runtime type of the token is determined by the token type of the first token
        //     encountered in the reader.
        public static Task<JToken> LoadAsync(JsonReader reader, [NullableAttribute(2)] JsonLoadSettings? settings, CancellationToken cancellationToken = default);
        //
        // 摘要:
        //     Asynchronously creates a Newtonsoft.Json.Linq.JToken from a Newtonsoft.Json.JsonReader.
        //
        // 参数:
        //   reader:
        //     A Newtonsoft.Json.JsonReader positioned at the token to read into this Newtonsoft.Json.Linq.JToken.
        //
        //   cancellationToken:
        //     The token to monitor for cancellation requests. The default value is System.Threading.CancellationToken.None.
        //
        // 返回结果:
        //     A System.Threading.Tasks.Task`1 that represents the asynchronous creation. The
        //     System.Threading.Tasks.Task`1.Result property returns a Newtonsoft.Json.Linq.JToken
        //     that contains the token and its descendant tokens that were read from the reader.
        //     The runtime type of the token is determined by the token type of the first token
        //     encountered in the reader.
        public static Task<JToken> LoadAsync(JsonReader reader, CancellationToken cancellationToken = default);
        //
        // 摘要:
        //     Load a Newtonsoft.Json.Linq.JToken from a string that contains JSON.
        //
        // 参数:
        //   json:
        //     A System.String that contains JSON.
        //
        // 返回结果:
        //     A Newtonsoft.Json.Linq.JToken populated from the string that contains JSON.
        public static JToken Parse(string json);
        //
        // 摘要:
        //     Load a Newtonsoft.Json.Linq.JToken from a string that contains JSON.
        //
        // 参数:
        //   json:
        //     A System.String that contains JSON.
        //
        //   settings:
        //     The Newtonsoft.Json.Linq.JsonLoadSettings used to load the JSON. If this is null,
        //     default load settings will be used.
        //
        // 返回结果:
        //     A Newtonsoft.Json.Linq.JToken populated from the string that contains JSON.
        public static JToken Parse(string json, [NullableAttribute(2)] JsonLoadSettings? settings);
        //
        // 摘要:
        //     Creates a Newtonsoft.Json.Linq.JToken from a Newtonsoft.Json.JsonReader.
        //
        // 参数:
        //   reader:
        //     A Newtonsoft.Json.JsonReader positioned at the token to read into this Newtonsoft.Json.Linq.JToken.
        //
        // 返回结果:
        //     A Newtonsoft.Json.Linq.JToken that contains the token and its descendant tokens
        //     that were read from the reader. The runtime type of the token is determined by
        //     the token type of the first token encountered in the reader.
        public static JToken ReadFrom(JsonReader reader);
        //
        // 摘要:
        //     Creates a Newtonsoft.Json.Linq.JToken from a Newtonsoft.Json.JsonReader.
        //
        // 参数:
        //   reader:
        //     An Newtonsoft.Json.JsonReader positioned at the token to read into this Newtonsoft.Json.Linq.JToken.
        //
        //   settings:
        //     The Newtonsoft.Json.Linq.JsonLoadSettings used to load the JSON. If this is null,
        //     default load settings will be used.
        //
        // 返回结果:
        //     A Newtonsoft.Json.Linq.JToken that contains the token and its descendant tokens
        //     that were read from the reader. The runtime type of the token is determined by
        //     the token type of the first token encountered in the reader.
        public static JToken ReadFrom(JsonReader reader, [NullableAttribute(2)] JsonLoadSettings? settings);
        //
        // 摘要:
        //     Asynchronously creates a Newtonsoft.Json.Linq.JToken from a Newtonsoft.Json.JsonReader.
        //
        // 参数:
        //   reader:
        //     An Newtonsoft.Json.JsonReader positioned at the token to read into this Newtonsoft.Json.Linq.JToken.
        //
        //   cancellationToken:
        //     The token to monitor for cancellation requests. The default value is System.Threading.CancellationToken.None.
        //
        // 返回结果:
        //     A System.Threading.Tasks.Task`1 that represents the asynchronous creation. The
        //     System.Threading.Tasks.Task`1.Result property returns a Newtonsoft.Json.Linq.JToken
        //     that contains the token and its descendant tokens that were read from the reader.
        //     The runtime type of the token is determined by the token type of the first token
        //     encountered in the reader.
        public static Task<JToken> ReadFromAsync(JsonReader reader, CancellationToken cancellationToken = default);
        //
        // 摘要:
        //     Asynchronously creates a Newtonsoft.Json.Linq.JToken from a Newtonsoft.Json.JsonReader.
        //
        // 参数:
        //   reader:
        //     An Newtonsoft.Json.JsonReader positioned at the token to read into this Newtonsoft.Json.Linq.JToken.
        //
        //   settings:
        //     The Newtonsoft.Json.Linq.JsonLoadSettings used to load the JSON. If this is null,
        //     default load settings will be used.
        //
        //   cancellationToken:
        //     The token to monitor for cancellation requests. The default value is System.Threading.CancellationToken.None.
        //
        // 返回结果:
        //     A System.Threading.Tasks.Task`1 that represents the asynchronous creation. The
        //     System.Threading.Tasks.Task`1.Result property returns a Newtonsoft.Json.Linq.JToken
        //     that contains the token and its descendant tokens that were read from the reader.
        //     The runtime type of the token is determined by the token type of the first token
        //     encountered in the reader.
        [AsyncStateMachine(typeof(<ReadFromAsync>d__3))]
        public static Task<JToken> ReadFromAsync(JsonReader reader, [NullableAttribute(2)] JsonLoadSettings? settings, CancellationToken cancellationToken = default);
        //
        // 摘要:
        //     Adds the specified content immediately after this token.
        //
        // 参数:
        //   content:
        //     A content object that contains simple content or a collection of content objects
        //     to be added after this token.
        [NullableContextAttribute(2)]
        public void AddAfterSelf(object? content);
        //
        // 摘要:
        //     Adds an object to the annotation list of this Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   annotation:
        //     The annotation to add.
        public void AddAnnotation(object annotation);
        //
        // 摘要:
        //     Adds the specified content immediately before this token.
        //
        // 参数:
        //   content:
        //     A content object that contains simple content or a collection of content objects
        //     to be added before this token.
        [NullableContextAttribute(2)]
        public void AddBeforeSelf(object? content);
        //
        // 摘要:
        //     Returns a collection of the sibling tokens after this token, in document order.
        //
        // 返回结果:
        //     A collection of the sibling tokens after this tokens, in document order.
        [IteratorStateMachine(typeof(<AfterSelf>d__49))]
        public IEnumerable<JToken> AfterSelf();
        //
        // 摘要:
        //     Returns a collection of the ancestor tokens of this token.
        //
        // 返回结果:
        //     A collection of the ancestor tokens of this token.
        public IEnumerable<JToken> Ancestors();
        //
        // 摘要:
        //     Returns a collection of tokens that contain this token, and the ancestors of
        //     this token.
        //
        // 返回结果:
        //     A collection of tokens that contain this token, and the ancestors of this token.
        public IEnumerable<JToken> AncestorsAndSelf();
        //
        // 摘要:
        //     Gets the first annotation object of the specified type from this Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   type:
        //     The Newtonsoft.Json.Linq.JToken.Type of the annotation to retrieve.
        //
        // 返回结果:
        //     The first annotation object that matches the specified type, or null if no annotation
        //     is of the specified type.
        [return: NullableAttribute(2)]
        public object? Annotation(Type type);
        //
        // 摘要:
        //     Get the first annotation object of the specified type from this Newtonsoft.Json.Linq.JToken.
        //
        // 类型参数:
        //   T:
        //     The type of the annotation to retrieve.
        //
        // 返回结果:
        //     The first annotation object that matches the specified type, or null if no annotation
        //     is of the specified type.
        [return: NullableAttribute(2)]
        public T Annotation<T>() where T : class;
        //
        // 摘要:
        //     Gets a collection of annotations of the specified type for this Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   type:
        //     The Newtonsoft.Json.Linq.JToken.Type of the annotations to retrieve.
        //
        // 返回结果:
        //     An System.Collections.Generic.IEnumerable`1 of System.Object that contains the
        //     annotations that match the specified type for this Newtonsoft.Json.Linq.JToken.
        [IteratorStateMachine(typeof(<Annotations>d__183))]
        public IEnumerable<object> Annotations(Type type);
        //
        // 摘要:
        //     Gets a collection of annotations of the specified type for this Newtonsoft.Json.Linq.JToken.
        //
        // 类型参数:
        //   T:
        //     The type of the annotations to retrieve.
        //
        // 返回结果:
        //     An System.Collections.Generic.IEnumerable`1 that contains the annotations for
        //     this Newtonsoft.Json.Linq.JToken.
        [IteratorStateMachine(typeof(JToken.<Annotations>d__182<>))]
        public IEnumerable<T> Annotations<T>() where T : class;
        //
        // 摘要:
        //     Returns a collection of the sibling tokens before this token, in document order.
        //
        // 返回结果:
        //     A collection of the sibling tokens before this token, in document order.
        [IteratorStateMachine(typeof(<BeforeSelf>d__50))]
        public IEnumerable<JToken> BeforeSelf();
        //
        // 摘要:
        //     Returns a collection of the child tokens of this token, in document order.
        //
        // 返回结果:
        //     An System.Collections.Generic.IEnumerable`1 of Newtonsoft.Json.Linq.JToken containing
        //     the child tokens of this Newtonsoft.Json.Linq.JToken, in document order.
        [return: NullableAttribute(new[] { 0, 1 })]
        public virtual JEnumerable<JToken> Children();
        //
        // 摘要:
        //     Returns a collection of the child tokens of this token, in document order, filtered
        //     by the specified type.
        //
        // 类型参数:
        //   T:
        //     The type to filter the child tokens on.
        //
        // 返回结果:
        //     A Newtonsoft.Json.Linq.JEnumerable`1 containing the child tokens of this Newtonsoft.Json.Linq.JToken,
        //     in document order.
        [NullableContextAttribute(0)]
        [return: NullableAttribute(new[] { 0, 1 })]
        public JEnumerable<T> Children<T>() where T : JToken;
        //
        // 摘要:
        //     Creates a Newtonsoft.Json.JsonReader for this token.
        //
        // 返回结果:
        //     A Newtonsoft.Json.JsonReader that can be used to read this token and its descendants.
        public JsonReader CreateReader();
        //
        // 摘要:
        //     Creates a new instance of the Newtonsoft.Json.Linq.JToken. All child tokens are
        //     recursively cloned.
        //
        // 返回结果:
        //     A new instance of the Newtonsoft.Json.Linq.JToken.
        public JToken DeepClone();
        //
        // 摘要:
        //     Removes this token from its parent.
        public void Remove();
        //
        // 摘要:
        //     Removes the annotations of the specified type from this Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   type:
        //     The Newtonsoft.Json.Linq.JToken.Type of annotations to remove.
        public void RemoveAnnotations(Type type);
        //
        // 摘要:
        //     Removes the annotations of the specified type from this Newtonsoft.Json.Linq.JToken.
        //
        // 类型参数:
        //   T:
        //     The type of annotations to remove.
        public void RemoveAnnotations<T>() where T : class;
        //
        // 摘要:
        //     Replaces this token with the specified token.
        //
        // 参数:
        //   value:
        //     The value.
        public void Replace(JToken value);
        //
        // 摘要:
        //     Selects a Newtonsoft.Json.Linq.JToken using a JSONPath expression. Selects the
        //     token that matches the object path.
        //
        // 参数:
        //   path:
        //     A System.String that contains a JSONPath expression.
        //
        // 返回结果:
        //     A Newtonsoft.Json.Linq.JToken, or null.
        [return: NullableAttribute(2)]
        public JToken? SelectToken(string path);
        //
        // 摘要:
        //     Selects a Newtonsoft.Json.Linq.JToken using a JSONPath expression. Selects the
        //     token that matches the object path.
        //
        // 参数:
        //   path:
        //     A System.String that contains a JSONPath expression.
        //
        //   errorWhenNoMatch:
        //     A flag to indicate whether an error should be thrown if no tokens are found when
        //     evaluating part of the expression.
        //
        // 返回结果:
        //     A Newtonsoft.Json.Linq.JToken.
        [return: NullableAttribute(2)]
        public JToken? SelectToken(string path, bool errorWhenNoMatch);
        //
        // 摘要:
        //     Selects a collection of elements using a JSONPath expression.
        //
        // 参数:
        //   path:
        //     A System.String that contains a JSONPath expression.
        //
        // 返回结果:
        //     An System.Collections.Generic.IEnumerable`1 of Newtonsoft.Json.Linq.JToken that
        //     contains the selected elements.
        public IEnumerable<JToken> SelectTokens(string path);
        //
        // 摘要:
        //     Selects a collection of elements using a JSONPath expression.
        //
        // 参数:
        //   path:
        //     A System.String that contains a JSONPath expression.
        //
        //   errorWhenNoMatch:
        //     A flag to indicate whether an error should be thrown if no tokens are found when
        //     evaluating part of the expression.
        //
        // 返回结果:
        //     An System.Collections.Generic.IEnumerable`1 of Newtonsoft.Json.Linq.JToken that
        //     contains the selected elements.
        public IEnumerable<JToken> SelectTokens(string path, bool errorWhenNoMatch);
        //
        // 摘要:
        //     Creates an instance of the specified .NET type from the Newtonsoft.Json.Linq.JToken
        //     using the specified Newtonsoft.Json.JsonSerializer.
        //
        // 参数:
        //   objectType:
        //     The object type that the token will be deserialized to.
        //
        //   jsonSerializer:
        //     The Newtonsoft.Json.JsonSerializer that will be used when creating the object.
        //
        // 返回结果:
        //     The new object created from the JSON value.
        [return: NullableAttribute(2)]
        public object? ToObject(Type objectType, JsonSerializer jsonSerializer);
        //
        // 摘要:
        //     Creates an instance of the specified .NET type from the Newtonsoft.Json.Linq.JToken
        //     using the specified Newtonsoft.Json.JsonSerializer.
        //
        // 参数:
        //   jsonSerializer:
        //     The Newtonsoft.Json.JsonSerializer that will be used when creating the object.
        //
        // 类型参数:
        //   T:
        //     The object type that the token will be deserialized to.
        //
        // 返回结果:
        //     The new object created from the JSON value.
        [return: MaybeNull]
        public T ToObject<[NullableAttribute(2)] T>(JsonSerializer jsonSerializer);
        //
        // 摘要:
        //     Creates an instance of the specified .NET type from the Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   objectType:
        //     The object type that the token will be deserialized to.
        //
        // 返回结果:
        //     The new object created from the JSON value.
        [return: NullableAttribute(2)]
        public object? ToObject(Type objectType);
        //
        // 摘要:
        //     Creates an instance of the specified .NET type from the Newtonsoft.Json.Linq.JToken.
        //
        // 类型参数:
        //   T:
        //     The object type that the token will be deserialized to.
        //
        // 返回结果:
        //     The new object created from the JSON value.
        [return: MaybeNull]
        public T ToObject<[NullableAttribute(2)] T>();
        //
        // 摘要:
        //     Returns the indented JSON for this token.
        //
        // 返回结果:
        //     The indented JSON for this token.
        //
        // 言论：
        //     ToString() returns a non-JSON string value for tokens with a type of Newtonsoft.Json.Linq.JTokenType.String.
        //     If you want the JSON for all token types then you should use Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter,Newtonsoft.Json.JsonConverter[]).
        public override string ToString();
        //
        // 摘要:
        //     Returns the JSON for this token using the given formatting and converters.
        //
        // 参数:
        //   formatting:
        //     Indicates how the output should be formatted.
        //
        //   converters:
        //     A collection of Newtonsoft.Json.JsonConverters which will be used when writing
        //     the token.
        //
        // 返回结果:
        //     The JSON for this token using the given formatting and converters.
        public string ToString(Formatting formatting, params JsonConverter[] converters);
        //
        // 摘要:
        //     Gets the Newtonsoft.Json.Linq.JToken with the specified key converted to the
        //     specified type.
        //
        // 参数:
        //   key:
        //     The token key.
        //
        // 类型参数:
        //   T:
        //     The type to convert the token to.
        //
        // 返回结果:
        //     The converted token value.
        public virtual T Value<[NullableAttribute(2)] T>(object key);
        //
        // 摘要:
        //     Returns a collection of the child values of this token, in document order.
        //
        // 类型参数:
        //   T:
        //     The type to convert the values to.
        //
        // 返回结果:
        //     A System.Collections.Generic.IEnumerable`1 containing the child values of this
        //     Newtonsoft.Json.Linq.JToken, in document order.
        public virtual IEnumerable<T> Values<[NullableAttribute(2)] T>();
        //
        // 摘要:
        //     Writes this token to a Newtonsoft.Json.JsonWriter.
        //
        // 参数:
        //   writer:
        //     A Newtonsoft.Json.JsonWriter into which this method will write.
        //
        //   converters:
        //     A collection of Newtonsoft.Json.JsonConverter which will be used when writing
        //     the token.
        public abstract void WriteTo(JsonWriter writer, params JsonConverter[] converters);
        //
        // 摘要:
        //     Writes this token to a Newtonsoft.Json.JsonWriter asynchronously.
        //
        // 参数:
        //   writer:
        //     A Newtonsoft.Json.JsonWriter into which this method will write.
        //
        //   cancellationToken:
        //     The token to monitor for cancellation requests.
        //
        //   converters:
        //     A collection of Newtonsoft.Json.JsonConverter which will be used when writing
        //     the token.
        //
        // 返回结果:
        //     A System.Threading.Tasks.Task that represents the asynchronous write operation.
        public virtual Task WriteToAsync(JsonWriter writer, CancellationToken cancellationToken, params JsonConverter[] converters);
        //
        // 摘要:
        //     Writes this token to a Newtonsoft.Json.JsonWriter asynchronously.
        //
        // 参数:
        //   writer:
        //     A Newtonsoft.Json.JsonWriter into which this method will write.
        //
        //   converters:
        //     A collection of Newtonsoft.Json.JsonConverter which will be used when writing
        //     the token.
        //
        // 返回结果:
        //     A System.Threading.Tasks.Task that represents the asynchronous write operation.
        public Task WriteToAsync(JsonWriter writer, params JsonConverter[] converters);
        //
        // 摘要:
        //     Returns the System.Dynamic.DynamicMetaObject responsible for binding operations
        //     performed on this object.
        //
        // 参数:
        //   parameter:
        //     The expression tree representation of the runtime value.
        //
        // 返回结果:
        //     The System.Dynamic.DynamicMetaObject to bind this object.
        protected virtual DynamicMetaObject GetMetaObject(Expression parameter);

        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.Guid to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(Guid? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.Int16 to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        [CLSCompliant(false)]
        public static implicit operator JToken(short? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.UInt16 to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        [CLSCompliant(false)]
        public static implicit operator JToken(ushort? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.UInt32 to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        [CLSCompliant(false)]
        public static implicit operator JToken(uint? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.UInt64 to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        [CLSCompliant(false)]
        public static implicit operator JToken(ulong? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Double to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(double value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Single to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(float value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.String to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken([NullableAttribute(2)] string? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.UInt32 to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        [CLSCompliant(false)]
        public static implicit operator JToken(uint value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.UInt64 to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        [CLSCompliant(false)]
        public static implicit operator JToken(ulong value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Byte[] to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(byte[] value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Uri to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken([NullableAttribute(2)] Uri? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.TimeSpan to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(TimeSpan value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.TimeSpan to
        //     Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(TimeSpan? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Guid to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(Guid value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Decimal to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(decimal value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.Single to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(float? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.Boolean to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(bool? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.DateTime to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(DateTime value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.Int64 to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(long? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.DateTimeOffset to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(DateTimeOffset value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Byte to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(byte value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.Byte to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(byte? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.SByte to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        [CLSCompliant(false)]
        public static implicit operator JToken(sbyte value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.SByte to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        [CLSCompliant(false)]
        public static implicit operator JToken(sbyte? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.Int64 to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(long value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Boolean to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(bool value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.DateTimeOffset
        //     to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(DateTimeOffset? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.Decimal to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(decimal? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.Double to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(double? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Int16 to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        [CLSCompliant(false)]
        public static implicit operator JToken(short value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.UInt16 to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        [CLSCompliant(false)]
        public static implicit operator JToken(ushort value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Int32 to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(int value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.Int32 to Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(int? value);
        //
        // 摘要:
        //     Performs an implicit conversion from System.Nullable`1 of System.DateTime to
        //     Newtonsoft.Json.Linq.JToken.
        //
        // 参数:
        //   value:
        //     The value to create a Newtonsoft.Json.Linq.JValue from.
        //
        // 返回结果:
        //     The Newtonsoft.Json.Linq.JValue initialized with the specified value.
        public static implicit operator JToken(DateTime? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.SByte.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [CLSCompliant(false)]
        public static explicit operator sbyte(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Byte.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        public static explicit operator byte(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Char.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [CLSCompliant(false)]
        public static explicit operator char(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.UInt16.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [CLSCompliant(false)]
        public static explicit operator ushort(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Int16.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        public static explicit operator short(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Int32.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        public static explicit operator int(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.Char.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [NullableContextAttribute(2)]
        public static explicit operator char?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.DateTimeOffset.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [NullableContextAttribute(2)]
        public static explicit operator DateTimeOffset?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.Decimal.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [NullableContextAttribute(2)]
        public static explicit operator decimal?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.DateTime.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [NullableContextAttribute(2)]
        public static explicit operator DateTime?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.Int64.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        public static explicit operator long(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.Boolean.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [NullableContextAttribute(2)]
        public static explicit operator bool?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.DateTimeOffset.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        public static explicit operator DateTimeOffset(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.Int32 .
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [NullableContextAttribute(2)]
        public static explicit operator int?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Uri.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [NullableContextAttribute(2)]
        public static explicit operator Uri?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.Double.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [NullableContextAttribute(2)]
        public static explicit operator double?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Boolean.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        public static explicit operator bool(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Decimal.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        public static explicit operator decimal(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.UInt16.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [CLSCompliant(false)]
        [NullableContextAttribute(2)]
        public static explicit operator ushort?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.Guid .
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [NullableContextAttribute(2)]
        public static explicit operator Guid?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.TimeSpan.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        public static explicit operator TimeSpan(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Guid.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        public static explicit operator Guid(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Byte[].
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [NullableContextAttribute(2)]
        public static explicit operator byte[]?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.UInt64.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [CLSCompliant(false)]
        public static explicit operator ulong(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.UInt32.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [CLSCompliant(false)]
        public static explicit operator uint(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.String.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [NullableContextAttribute(2)]
        public static explicit operator string?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.Int16.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [NullableContextAttribute(2)]
        public static explicit operator short?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Single.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        public static explicit operator float(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.UInt64.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [CLSCompliant(false)]
        [NullableContextAttribute(2)]
        public static explicit operator ulong?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.UInt32.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [CLSCompliant(false)]
        [NullableContextAttribute(2)]
        public static explicit operator uint?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.Single.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [NullableContextAttribute(2)]
        public static explicit operator float?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.Int64.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [NullableContextAttribute(2)]
        public static explicit operator long?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.DateTime.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        public static explicit operator DateTime(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.SByte.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [CLSCompliant(false)]
        [NullableContextAttribute(2)]
        public static explicit operator sbyte?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.Byte.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [NullableContextAttribute(2)]
        public static explicit operator byte?(JToken? value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Double.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        public static explicit operator double(JToken value);
        //
        // 摘要:
        //     Performs an explicit conversion from Newtonsoft.Json.Linq.JToken to System.Nullable`1
        //     of System.TimeSpan.
        //
        // 参数:
        //   value:
        //     The value.
        //
        // 返回结果:
        //     The result of the conversion.
        [NullableContextAttribute(2)]
        public static explicit operator TimeSpan?(JToken? value);
    }
}