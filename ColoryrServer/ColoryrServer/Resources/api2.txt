#region 程序集 HtmlAgilityPack, Version=1.11.24.0, Culture=neutral, PublicKeyToken=bd319b19eaf3b43a
// C:\Users\40206\.nuget\packages\htmlagilitypack\1.11.24\lib\netstandard2.0\HtmlAgilityPack.dll
#endregion

using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace HtmlAgilityPack
{
    //
    // 摘要:
    //     Represents a combined list and collection of HTML nodes.
    [DefaultMember("Item")]
    public class HtmlNodeCollection : IList<HtmlNode>, ICollection<HtmlNode>, IEnumerable<HtmlNode>, IEnumerable
    {
        //
        // 摘要:
        //     Initialize the HtmlNodeCollection with the base parent node
        //
        // 参数:
        //   parentnode:
        //     The base node of the collection
        public HtmlNodeCollection(HtmlNode parentnode);

        //
        // 摘要:
        //     Get node with tag name
        //
        // 参数:
        //   nodeName:
        public HtmlNode this[string nodeName] { get; }
        //
        // 摘要:
        //     Gets a given node from the list.
        public int this[HtmlNode node] { get; }
        //
        // 摘要:
        //     Gets the node at the specified index.
        public HtmlNode this[int index] { get; set; }

        //
        // 摘要:
        //     Gets the number of elements actually contained in the list.
        public int Count { get; }
        //
        // 摘要:
        //     Is collection read only
        public bool IsReadOnly { get; }

        //
        // 摘要:
        //     Get first instance of node in supplied collection
        //
        // 参数:
        //   items:
        //
        //   name:
        public static HtmlNode FindFirst(HtmlNodeCollection items, string name);
        //
        // 摘要:
        //     Add node to the collection
        //
        // 参数:
        //   node:
        public void Add(HtmlNode node);
        //
        // 摘要:
        //     Add node to the collection
        //
        // 参数:
        //   node:
        //
        //   setParent:
        public void Add(HtmlNode node, bool setParent);
        //
        // 摘要:
        //     Add node to the end of the collection
        //
        // 参数:
        //   node:
        public void Append(HtmlNode node);
        //
        // 摘要:
        //     Clears out the collection of HtmlNodes. Removes each nodes reference to parentnode,
        //     nextnode and prevnode
        public void Clear();
        //
        // 摘要:
        //     Gets existence of node in collection
        //
        // 参数:
        //   item:
        public bool Contains(HtmlNode item);
        //
        // 摘要:
        //     Copy collection to array
        //
        // 参数:
        //   array:
        //
        //   arrayIndex:
        public void CopyTo(HtmlNode[] array, int arrayIndex);
        //
        // 摘要:
        //     Get all node descended from this collection with matching name
        [IteratorStateMachine(typeof(<Descendants>d__33))]
        public IEnumerable<HtmlNode> Descendants(string name);
        //
        // 摘要:
        //     Get all node descended from this collection
        [IteratorStateMachine(typeof(<Descendants>d__32))]
        public IEnumerable<HtmlNode> Descendants();
        //
        // 摘要:
        //     Gets all first generation elements matching name
        //
        // 参数:
        //   name:
        [IteratorStateMachine(typeof(<Elements>d__35))]
        public IEnumerable<HtmlNode> Elements(string name);
        //
        // 摘要:
        //     Gets all first generation elements in collection
        [IteratorStateMachine(typeof(<Elements>d__34))]
        public IEnumerable<HtmlNode> Elements();
        //
        // 摘要:
        //     Get first instance of node with name
        //
        // 参数:
        //   name:
        public HtmlNode FindFirst(string name);
        //
        // 摘要:
        //     Get index of node
        //
        // 参数:
        //   node:
        public int GetNodeIndex(HtmlNode node);
        //
        // 摘要:
        //     Get index of node
        //
        // 参数:
        //   item:
        public int IndexOf(HtmlNode item);
        //
        // 摘要:
        //     Insert node at index
        //
        // 参数:
        //   index:
        //
        //   node:
        public void Insert(int index, HtmlNode node);
        //
        // 摘要:
        //     All first generation nodes in collection
        [IteratorStateMachine(typeof(<Nodes>d__36))]
        public IEnumerable<HtmlNode> Nodes();
        //
        // 摘要:
        //     Add node to the beginning of the collection
        //
        // 参数:
        //   node:
        public void Prepend(HtmlNode node);
        //
        // 摘要:
        //     Remove node
        //
        // 参数:
        //   item:
        public bool Remove(HtmlNode item);
        //
        // 摘要:
        //     Remove node at index
        //
        // 参数:
        //   index:
        public bool Remove(int index);
        //
        // 摘要:
        //     Remove HtmlAgilityPack.HtmlNode at index
        //
        // 参数:
        //   index:
        public void RemoveAt(int index);
        //
        // 摘要:
        //     Replace node at index
        //
        // 参数:
        //   index:
        //
        //   node:
        public void Replace(int index, HtmlNode node);
    }
}