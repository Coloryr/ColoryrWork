//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ColoryrServer.Core {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SDKResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SDKResource() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ColoryrServer.Core.SDKResource", typeof(SDKResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 using ColoryrServer.Core;
        ///using ColoryrServer.Core.FileSystem;
        ///using ColoryrServer.Core.Robot;
        ///using ColoryrServer.Core.Utils;
        ///using ColoryrServer.Core.WebSocket;
        ///using DotNetty.Transport.Channels;
        ///using Fleck;
        ///using Newtonsoft.Json;
        ///using Newtonsoft.Json.Linq;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.IO;
        ///using System.Security.Cryptography;
        ///using System.Text;
        ///
        ///namespace ColoryrServer.SDK;
        ///
        ////// &lt;summary&gt;
        ////// Netty接口
        ////// &lt;/summary&gt;
        ///public abstract class INetty
        ///{
        ///    p [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string ColoryrSDK {
            get {
                return ResourceManager.GetString("ColoryrSDK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using ColoryrServer.Core.DataBase;
        ///using Dapper;
        ///using MySql.Data.MySqlClient;
        ///using Oracle.ManagedDataAccess.Client;
        ///using StackExchange.Redis;
        ///using System.Collections.Generic;
        ///using System.Data.SqlClient;
        ///
        ///namespace ColoryrServer.SDK;
        ///
        ///public partial class Mysql
        ///{
        ///    private string Database;
        ///    private int ID;
        ///    /// &lt;summary&gt;
        ///    /// Mysql数据库
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;database&quot;&gt;数据库名&lt;/param&gt;
        ///    /// &lt;param name=&quot;id&quot;&gt;数据库ID&lt;/param&gt;
        ///    public Mysql(string database = &quot;&quot;,  [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string DatabaseSDK {
            get {
                return ResourceManager.GetString("DatabaseSDK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using ColoryrServer.Core.Html;
        ///using HtmlAgilityPack;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Net;
        ///using System.Net.Http;
        ///using System.Threading;
        ///using System.Threading.Tasks;
        ///
        ///namespace ColoryrServer.SDK;
        ///
        ///public partial class NewHttpHtml : IDisposable
        ///{
        ///    public CancellationTokenSource Cancel;
        ///    public CookieContainer Cookies { get; private set; }
        ///
        ///    private ExHttpClient Client;
        ///    private Dictionary&lt;string, string&gt; Head;
        ///
        ///    public NewHt [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string HtmlSDK {
            get {
                return ResourceManager.GetString("HtmlSDK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using ColoryrServer.Core.PortServer;
        ///using MQTTnet.Protocol;
        ///using MQTTnet.Server;
        ///
        ///namespace ColoryrServer.SDK;
        ///
        ///public static class MqttSDK
        ///{
        ///    /// &lt;summary&gt;
        ///    /// 发送消息
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;topic&quot;&gt;标题&lt;/param&gt;
        ///    /// &lt;param name=&quot;data&quot;&gt;数据&lt;/param&gt;
        ///    public static void Send(string topic, string data, MqttQualityOfServiceLevel level = MqttQualityOfServiceLevel.ExactlyOnce)
        ///        =&gt; PortMqttServer.Send(topic, data, level);
        ///}
        ///
        ///public class DllMqttLoadingRetainedMessag [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string MqttSDK {
            get {
                return ResourceManager.GetString("MqttSDK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///
        ///namespace ColoryrServer.SDK;
        ///
        ///[AttributeUsage(AttributeTargets.Method, AllowMultiple = false)]
        ///public class NotesSDK : Attribute
        ///{
        ///    public string Text;
        ///    public string[] Input;
        ///    public string[] Output;
        ///
        ///    public NotesSDK(string text, string[] input = null, string[] output = null)
        ///    {
        ///        Text = text;
        ///        Input = input ?? new string[1];
        ///        Output = output ?? new string[1];
        ///    }
        ///}
        ///
        ///[AttributeUsage(AttributeTargets.Class, AllowMultiple = false)]
        ///publ [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string NotesSDK {
            get {
                return ResourceManager.GetString("NotesSDK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using Newtonsoft.Json;
        ///using System;
        ///using System.Collections.Concurrent;
        ///using System.Collections.Generic;
        ///using System.Text;
        ///using System.Threading;
        /////请用net6运行
        /////并安装Newtonsoft.Json
        ///namespace ColoryrServer.Core.Robot;
        ///
        /////机器人返回数据包
        ////// &lt;summary&gt;
        ////// 55 [插件]获取群列表
        ////// &lt;/summary&gt;
        ///public record ReListGroupPack : PackBase
        ///{
        ///    /// &lt;summary&gt;
        ///    /// 群列表
        ///    /// &lt;/summary&gt;
        ///    public List&lt;GroupInfo&gt; groups { get; set; }
        ///    /// &lt;summary&gt;
        ///    /// 请求UUID
        ///    /// &lt;/summary&gt;
        ///    public string uu [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string RobotPacks {
            get {
                return ResourceManager.GetString("RobotPacks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using ColoryrServer.Core.Robot;
        ///using System.Collections.Generic;
        ///
        ///namespace ColoryrServer.SDK;
        ///
        ///public class RobotSend
        ///{
        ///    public enum MessageType
        ///    {
        ///        group, private_, friend, stranger
        ///    }
        ///    public long qq { get; private set; }
        ///    public MessageType type { get; private set; }
        ///    public long id { get; private set; }
        ///    public long fid { get; private set; }
        ///    public bool res { get; private set; }
        ///    public string error { get; private set; }
        ///    public string messageId { [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string RobotSDK {
            get {
                return ResourceManager.GetString("RobotSDK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using ColoryrServer.Core.IoT;
        ///using System.Collections.Generic;
        ///using System.Net;
        ///using System.Text;
        ///
        ///namespace ColoryrServer.SDK;
        ///
        ///public partial class TcpSocketRequest
        ///{
        ///    public IPEndPoint Port { get; init; }
        ///    public byte[] Data { get; init; }
        ///    /// &lt;summary&gt;
        ///    /// 构造方法
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;port&quot;&gt;Socket端口&lt;/param&gt;
        ///    /// &lt;param name=&quot;data&quot;&gt;Socket发送的数据&lt;/param&gt;
        ///    public TcpSocketRequest(IPEndPoint port, byte[] data)
        ///    {
        ///        Port = port;
        ///        Data =  [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string SocketSDK {
            get {
                return ResourceManager.GetString("SocketSDK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using ColoryrServer.Core.TaskUtils;
        ///
        ///namespace ColoryrServer.SDK;
        ///
        ///public class TaskSDK
        ///{
        ///    /// &lt;summary&gt;
        ///    /// 是否存在任务
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;name&quot;&gt;任务名字&lt;/param&gt;
        ///    /// &lt;returns&gt;是否存在&lt;/returns&gt;
        ///    public static bool HaveTask(string name)
        ///        =&gt; TaskManager.HaveTask(name);
        ///    /// &lt;summary&gt;
        ///    /// 添加一个任务
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;arg&quot;&gt;任务参数&lt;/param&gt;
        ///    public static void StartTask(TaskUserArg arg)
        ///        =&gt; TaskManager.StartTask(arg);
        ///    /// &lt;summar [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string TaskSDK {
            get {
                return ResourceManager.GetString("TaskSDK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Collections.Specialized;
        ///using System.IO;
        ///
        ///namespace ColoryrServer.SDK;
        ///
        ///public class HttpDllRequest
        ///{
        ///    /// &lt;summary&gt;
        ///    /// 请求参数
        ///    /// &lt;/summary&gt;
        ///    public Dictionary&lt;string, dynamic&gt; Parameter { get; init; }
        ///    /// &lt;summary&gt;
        ///    /// 请求头
        ///    /// &lt;/summary&gt;
        ///    public NameValueCollection RowRequest { get; init; }
        ///    /// &lt;summary&gt;
        ///    /// Cookie
        ///    /// &lt;/summary&gt;
        ///    public Dictionary&lt;string, List&lt;string&gt;&gt; Cookie { get [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string WebApiSDK {
            get {
                return ResourceManager.GetString("WebApiSDK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Collections.Specialized;
        ///using System.IO;
        ///
        ///namespace ColoryrServer.SDK;
        ///
        ///public class HttpDllRequest
        ///{
        ///    /// &lt;summary&gt;
        ///    /// 请求参数
        ///    /// &lt;/summary&gt;
        ///    public Dictionary&lt;string, dynamic&gt; Parameter { get; init; }
        ///    /// &lt;summary&gt;
        ///    /// 请求头
        ///    /// &lt;/summary&gt;
        ///    public NameValueCollection RowRequest { get; init; }
        ///    /// &lt;summary&gt;
        ///    /// Cookie
        ///    /// &lt;/summary&gt;
        ///    public Dictionary&lt;string, List&lt;string&gt;&gt; Cookie { get [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string WebApiSDK1 {
            get {
                return ResourceManager.GetString("WebApiSDK1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using ColoryrServer.Core.FileSystem.Html;
        ///using ColoryrServer.Core.Http;
        ///using DotNetty.Codecs.Http;
        ///
        ///namespace ColoryrServer.SDK;
        ///
        ///public static class WebHtml
        ///{
        ///    /// &lt;summary&gt;
        ///    /// 获取动态前端资源
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;uuid&quot;&gt;&lt;/param&gt;
        ///    /// &lt;param name=&quot;name&quot;&gt;&lt;/param&gt;
        ///    /// &lt;returns&gt;&lt;/returns&gt;
        ///    public static byte[] GetWebFile(string uuid, string name)
        ///    {
        ///        var route = HttpInvokeRoute.Get(uuid);
        ///        return route.Invoke(null, name).Data as byte[];
        ///    }
        /// [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string WebHtmlSDK {
            get {
                return ResourceManager.GetString("WebHtmlSDK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using ColoryrServer.Core.WebSocket;
        ///using Fleck;
        ///
        ///namespace ColoryrServer.SDK;
        ///
        ///public static class WebSocketUtils
        ///{
        ///    /// &lt;summary&gt;
        ///    /// 发送数据
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;info&quot;&gt;接口&lt;/param&gt;
        ///    /// &lt;param name=&quot;data&quot;&gt;数据&lt;/param&gt;
        ///    public static void Send(IWebSocketConnectionInfo info, string data)
        ///        =&gt; ServerWebSocket.Send(info.ClientPort, data);
        ///    public static void Send(IWebSocketConnectionInfo info, byte[] data)
        ///        =&gt; ServerWebSocket.Send(info.ClientPort, data) [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string WebSocketSDK {
            get {
                return ResourceManager.GetString("WebSocketSDK", resourceCulture);
            }
        }
    }
}
